// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./log_event_package.proto
package com.wandoujia.logv3.model.packages;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoEnum;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;

/**
 * 在View上打Tag的package
 */
public final class ViewLogPackage extends Message {

  public static final Element DEFAULT_ELEMENT = Element.BUTTON;
  public static final Action DEFAULT_ACTION = Action.REDIRECT;
  public static final String DEFAULT_MODULE = "";
  public static final String DEFAULT_NAME = "";

  /**
   * url
   */
  @ProtoField(tag = 1)
  public final UrlPackage url_package;

  /**
   * 元素类型
   */
  @ProtoField(tag = 2, type = ENUM)
  public final Element element;

  /**
   * 操作
   */
  @ProtoField(tag = 3, type = ENUM)
  public final Action action;

  /**
   * 点击的元素所在的最小模块。如卡片、如Feed、如ActionBar
   */
  @ProtoField(tag = 4, type = STRING)
  public final String module;

  /**
   * 位置
   */
  @ProtoField(tag = 5)
  public final IndexPackage index;

  /**
   * 元素名称
   */
  @ProtoField(tag = 6, type = STRING)
  public final String name;

  private ViewLogPackage(Builder builder) {
    super(builder);
    this.url_package = builder.url_package;
    this.element = builder.element;
    this.action = builder.action;
    this.module = builder.module;
    this.index = builder.index;
    this.name = builder.name;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ViewLogPackage)) return false;
    ViewLogPackage o = (ViewLogPackage) other;
    return equals(url_package, o.url_package)
        && equals(element, o.element)
        && equals(action, o.action)
        && equals(module, o.module)
        && equals(index, o.index)
        && equals(name, o.name);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = url_package != null ? url_package.hashCode() : 0;
      result = result * 37 + (element != null ? element.hashCode() : 0);
      result = result * 37 + (action != null ? action.hashCode() : 0);
      result = result * 37 + (module != null ? module.hashCode() : 0);
      result = result * 37 + (index != null ? index.hashCode() : 0);
      result = result * 37 + (name != null ? name.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<ViewLogPackage> {

    public UrlPackage url_package;
    public Element element;
    public Action action;
    public String module;
    public IndexPackage index;
    public String name;

    public Builder() {
    }

    public Builder(ViewLogPackage message) {
      super(message);
      if (message == null) return;
      this.url_package = message.url_package;
      this.element = message.element;
      this.action = message.action;
      this.module = message.module;
      this.index = message.index;
      this.name = message.name;
    }

    /**
     * url
     */
    public Builder url_package(UrlPackage url_package) {
      this.url_package = url_package;
      return this;
    }

    /**
     * 元素类型
     */
    public Builder element(Element element) {
      this.element = element;
      return this;
    }

    /**
     * 操作
     */
    public Builder action(Action action) {
      this.action = action;
      return this;
    }

    /**
     * 点击的元素所在的最小模块。如卡片、如Feed、如ActionBar
     */
    public Builder module(String module) {
      this.module = module;
      return this;
    }

    /**
     * 位置
     */
    public Builder index(IndexPackage index) {
      this.index = index;
      return this;
    }

    /**
     * 元素名称
     */
    public Builder name(String name) {
      this.name = name;
      return this;
    }

    @Override
    public ViewLogPackage build() {
      return new ViewLogPackage(this);
    }
  }

  public static final class IndexPackage extends Message {

    public static final Integer DEFAULT_INDEX = 0;
    public static final Integer DEFAULT_SUB_INDEX = 0;

    /**
     * 在 feed 上的排序位置，以 0 为开始
     */
    @ProtoField(tag = 1, type = INT32)
    public final Integer index;

    /**
     * 在 card 上的排序位置，以 0 为开始
     */
    @ProtoField(tag = 2, type = INT32)
    public final Integer sub_index;

    private IndexPackage(Builder builder) {
      super(builder);
      this.index = builder.index;
      this.sub_index = builder.sub_index;
    }

    @Override
    public boolean equals(Object other) {
      if (other == this) return true;
      if (!(other instanceof IndexPackage)) return false;
      IndexPackage o = (IndexPackage) other;
      return equals(index, o.index)
          && equals(sub_index, o.sub_index);
    }

    @Override
    public int hashCode() {
      int result = hashCode;
      if (result == 0) {
        result = index != null ? index.hashCode() : 0;
        result = result * 37 + (sub_index != null ? sub_index.hashCode() : 0);
        hashCode = result;
      }
      return result;
    }

    public static final class Builder extends Message.Builder<IndexPackage> {

      public Integer index;
      public Integer sub_index;

      public Builder() {
      }

      public Builder(IndexPackage message) {
        super(message);
        if (message == null) return;
        this.index = message.index;
        this.sub_index = message.sub_index;
      }

      /**
       * 在 feed 上的排序位置，以 0 为开始
       */
      public Builder index(Integer index) {
        this.index = index;
        return this;
      }

      /**
       * 在 card 上的排序位置，以 0 为开始
       */
      public Builder sub_index(Integer sub_index) {
        this.sub_index = sub_index;
        return this;
      }

      @Override
      public IndexPackage build() {
        return new IndexPackage(this);
      }
    }
  }

  public enum Element
      implements ProtoEnum {
    BUTTON(1),
    /**
     * 按钮
     */
    TAB(2),
    /**
     * tab
     */
    INPUT_BOX(3),
    /**
     * 输入框
     */
    TEXT_LINK(4),
    /**
     * 文字链接
     */
    CARD(5),
    /**
     * 卡片
     */
    SPINNER(6),
    /**
     * spinner
     */
    MENU_ITEM(7),
    /**
     * 菜单
     */
    LIST_ITEM(8),
    /**
     * 列表
     */
    LABEL(9),
    /**
     * 标签
     */
    PROGRESS(10),
    /**
     * progress
     */
    BACK(11),
    /**
     * 返回
     */
    HEADER(12),
    /**
     * 头
     */
    SUB_ACTION(13),
    /**
     * 子操作
     */
    POPUP_BUTTON(14),
    /**
     * 弹出按钮
     */
    PAGE(15),
    /**
     * 页面
     */
    ICON(16),
    /**
     * ICON
     */
    SLIDE(17),
    /**
     * slide
     */
    PICTURE(18),
    /**
     * 图片
     */
    SUB_TAB(19),
    /**
     * 子 Tab
     */
    FOOTER(20);

    private final int value;

    private Element(int value) {
      this.value = value;
    }

    @Override
    public int getValue() {
      return value;
    }
  }

  public enum Action
      implements ProtoEnum {
    REDIRECT(1),
    /**
     * 重定向
     */
    EXPAND(2),
    /**
     * 展开
     */
    SEARCH(3),
    /**
     * 搜索
     */
    CLEAR_SEARCH_HISTORY(4),
    /**
     * 清除搜索历史
     */
    POPUP(5),
    /**
     * 弹出
     */
    SUBSCRIBE(6),
    /**
     * 追追看
     */
    UNSUBSCRIBE(7),
    /**
     * 不追了
     */
    DOWNLOAD_ALL(8),
    /**
     * 下载全部
     */
    UPGRADE_ALL(9),
    /**
     * 升级全部
     */
    OPEN_URL(10),
    /**
     * 打开链接
     */
    PAUSE(11),
    /**
     * 暂停
     */
    RESUME(12),
    /**
     * 恢复
     */
    REMOVE(13),
    /**
     * 移除
     */
    SET_WALLPAPER(14),
    /**
     * 设置壁纸
     */
    RETRY(15),
    /**
     * 重试
     */
    SHARE(16),
    /**
     * 分享
     */
    INFORMATION(17),
    /**
     * 信息
     */
    ZOOM(18),
    /**
     * 缩放
     */
    CLEAR(19),
    /**
     * 清除
     */
    FOCUS(20),
    /**
     * 聚焦
     */
    DRAG(21),
    /**
     * 拖拽
     */
    SET(22),
    /**
     * 设置
     */
    OPEN(23),
    /**
     * 打开
     */
    DOWNLOAD(24),
    /**
     * 下载
     */
    CLOSE(25),
    /**
     * 关闭
     */
    SELECT(26),
    /**
     * 选择
     */
    UNSELECT(27);

    private final int value;

    private Action(int value) {
      this.value = value;
    }

    @Override
    public int getValue() {
      return value;
    }
  }
}
