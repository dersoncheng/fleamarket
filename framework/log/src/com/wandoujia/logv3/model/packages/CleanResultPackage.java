// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./log_transition.proto
package com.wandoujia.logv3.model.packages;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT64;

/**
 * 清理结果信息，owner by xubin
 */
public final class CleanResultPackage extends Message {

  public static final String DEFAULT_CLEAN_ID = "";
  public static final String DEFAULT_TYPE = "";
  public static final Long DEFAULT_SIZE = 0L;
  public static final String DEFAULT_CONTENT_ID = "";
  public static final String DEFAULT_TITLE = "";
  public static final Integer DEFAULT_RECOMMEND = 0;
  public static final Integer DEFAULT_READ_DAY = 0;
  public static final String DEFAULT_PATH = "";

  /**
   * 清理的id
   */
  @ProtoField(tag = 1, type = STRING)
  public final String clean_id;

  /**
   * 类型
   */
  @ProtoField(tag = 2, type = STRING)
  public final String type;

  /**
   * (size在ios是关键字)，单位是kb
   */
  @ProtoField(tag = 3, type = UINT64)
  public final Long size;

  /**
   * 清理出的应用的名字
   */
  @ProtoField(tag = 4, type = STRING)
  public final String content_id;

  /**
   * 标题
   */
  @ProtoField(tag = 5, type = STRING)
  public final String title;

  /**
   * recommend
   */
  @ProtoField(tag = 6, type = INT32)
  public final Integer recommend;

  /**
   * read_day
   */
  @ProtoField(tag = 7, type = INT32)
  public final Integer read_day;

  /**
   * path
   */
  @ProtoField(tag = 8, type = STRING)
  public final String path;

  private CleanResultPackage(Builder builder) {
    super(builder);
    this.clean_id = builder.clean_id;
    this.type = builder.type;
    this.size = builder.size;
    this.content_id = builder.content_id;
    this.title = builder.title;
    this.recommend = builder.recommend;
    this.read_day = builder.read_day;
    this.path = builder.path;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof CleanResultPackage)) return false;
    CleanResultPackage o = (CleanResultPackage) other;
    return equals(clean_id, o.clean_id)
        && equals(type, o.type)
        && equals(size, o.size)
        && equals(content_id, o.content_id)
        && equals(title, o.title)
        && equals(recommend, o.recommend)
        && equals(read_day, o.read_day)
        && equals(path, o.path);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = clean_id != null ? clean_id.hashCode() : 0;
      result = result * 37 + (type != null ? type.hashCode() : 0);
      result = result * 37 + (size != null ? size.hashCode() : 0);
      result = result * 37 + (content_id != null ? content_id.hashCode() : 0);
      result = result * 37 + (title != null ? title.hashCode() : 0);
      result = result * 37 + (recommend != null ? recommend.hashCode() : 0);
      result = result * 37 + (read_day != null ? read_day.hashCode() : 0);
      result = result * 37 + (path != null ? path.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<CleanResultPackage> {

    public String clean_id;
    public String type;
    public Long size;
    public String content_id;
    public String title;
    public Integer recommend;
    public Integer read_day;
    public String path;

    public Builder() {
    }

    public Builder(CleanResultPackage message) {
      super(message);
      if (message == null) return;
      this.clean_id = message.clean_id;
      this.type = message.type;
      this.size = message.size;
      this.content_id = message.content_id;
      this.title = message.title;
      this.recommend = message.recommend;
      this.read_day = message.read_day;
      this.path = message.path;
    }

    /**
     * 清理的id
     */
    public Builder clean_id(String clean_id) {
      this.clean_id = clean_id;
      return this;
    }

    /**
     * 类型
     */
    public Builder type(String type) {
      this.type = type;
      return this;
    }

    /**
     * (size在ios是关键字)，单位是kb
     */
    public Builder size(Long size) {
      this.size = size;
      return this;
    }

    /**
     * 清理出的应用的名字
     */
    public Builder content_id(String content_id) {
      this.content_id = content_id;
      return this;
    }

    /**
     * 标题
     */
    public Builder title(String title) {
      this.title = title;
      return this;
    }

    /**
     * recommend
     */
    public Builder recommend(Integer recommend) {
      this.recommend = recommend;
      return this;
    }

    /**
     * read_day
     */
    public Builder read_day(Integer read_day) {
      this.read_day = read_day;
      return this;
    }

    /**
     * path
     */
    public Builder path(String path) {
      this.path = path;
      return this;
    }

    @Override
    public CleanResultPackage build() {
      return new CleanResultPackage(this);
    }
  }
}
