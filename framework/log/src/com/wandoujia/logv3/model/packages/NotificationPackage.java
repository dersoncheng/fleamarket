// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./log_transition.proto
package com.wandoujia.logv3.model.packages;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.STRING;

/**
 * 通知栏信息
 */
public final class NotificationPackage extends Message {

  public static final String DEFAULT_TITLE = "";
  public static final String DEFAULT_ID = "";
  public static final String DEFAULT_TYPE = "";
  public static final String DEFAULT_STYLE = "";

  /**
   * notification的文案
   */
  @ProtoField(tag = 1, type = STRING)
  public final String title;

  /**
   * 由发送的用户群、内容、时间、发送人决定的唯一id
   */
  @ProtoField(tag = 2, type = STRING)
  public final String id;

  /**
   * 通知栏类型
   */
  @ProtoField(tag = 3, type = STRING)
  public final String type;

  /**
   * 通知栏样式
   */
  @ProtoField(tag = 4, type = STRING)
  public final String style;

  /**
   * 通知栏点击的url
   */
  @ProtoField(tag = 5)
  public final UrlPackage landing_page;

  private NotificationPackage(Builder builder) {
    super(builder);
    this.title = builder.title;
    this.id = builder.id;
    this.type = builder.type;
    this.style = builder.style;
    this.landing_page = builder.landing_page;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof NotificationPackage)) return false;
    NotificationPackage o = (NotificationPackage) other;
    return equals(title, o.title)
        && equals(id, o.id)
        && equals(type, o.type)
        && equals(style, o.style)
        && equals(landing_page, o.landing_page);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = title != null ? title.hashCode() : 0;
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (type != null ? type.hashCode() : 0);
      result = result * 37 + (style != null ? style.hashCode() : 0);
      result = result * 37 + (landing_page != null ? landing_page.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<NotificationPackage> {

    public String title;
    public String id;
    public String type;
    public String style;
    public UrlPackage landing_page;

    public Builder() {
    }

    public Builder(NotificationPackage message) {
      super(message);
      if (message == null) return;
      this.title = message.title;
      this.id = message.id;
      this.type = message.type;
      this.style = message.style;
      this.landing_page = message.landing_page;
    }

    /**
     * notification的文案
     */
    public Builder title(String title) {
      this.title = title;
      return this;
    }

    /**
     * 由发送的用户群、内容、时间、发送人决定的唯一id
     */
    public Builder id(String id) {
      this.id = id;
      return this;
    }

    /**
     * 通知栏类型
     */
    public Builder type(String type) {
      this.type = type;
      return this;
    }

    /**
     * 通知栏样式
     */
    public Builder style(String style) {
      this.style = style;
      return this;
    }

    /**
     * 通知栏点击的url
     */
    public Builder landing_page(UrlPackage landing_page) {
      this.landing_page = landing_page;
      return this;
    }

    @Override
    public NotificationPackage build() {
      return new NotificationPackage(this);
    }
  }
}
