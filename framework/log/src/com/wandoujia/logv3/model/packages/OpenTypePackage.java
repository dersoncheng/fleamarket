// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./log_extra_package.proto
package com.wandoujia.logv3.model.packages;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoEnum;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.STRING;

/**
 * 打开方式包
 */
public final class OpenTypePackage extends Message {

  public static final OpenType DEFAULT_TYPE = OpenType.WDJ;
  public static final Mode DEFAULT_MODE = Mode.ONLINE;
  public static final String DEFAULT_OPEN_PROVIDER_PACKAGE_NAME = "";

  /**
   * 打开方式
   */
  @ProtoField(tag = 1, type = ENUM)
  public final OpenType type;

  /**
   * 打开模式
   */
  @ProtoField(tag = 2, type = ENUM)
  public final Mode mode;

  /**
   * 提供方的应用名
   */
  @ProtoField(tag = 3, type = STRING)
  public final String open_provider_package_name;

  private OpenTypePackage(Builder builder) {
    super(builder);
    this.type = builder.type;
    this.mode = builder.mode;
    this.open_provider_package_name = builder.open_provider_package_name;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof OpenTypePackage)) return false;
    OpenTypePackage o = (OpenTypePackage) other;
    return equals(type, o.type)
        && equals(mode, o.mode)
        && equals(open_provider_package_name, o.open_provider_package_name);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = type != null ? type.hashCode() : 0;
      result = result * 37 + (mode != null ? mode.hashCode() : 0);
      result = result * 37 + (open_provider_package_name != null ? open_provider_package_name.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<OpenTypePackage> {

    public OpenType type;
    public Mode mode;
    public String open_provider_package_name;

    public Builder() {
    }

    public Builder(OpenTypePackage message) {
      super(message);
      if (message == null) return;
      this.type = message.type;
      this.mode = message.mode;
      this.open_provider_package_name = message.open_provider_package_name;
    }

    /**
     * 打开方式
     */
    public Builder type(OpenType type) {
      this.type = type;
      return this;
    }

    /**
     * 打开模式
     */
    public Builder mode(Mode mode) {
      this.mode = mode;
      return this;
    }

    /**
     * 提供方的应用名
     */
    public Builder open_provider_package_name(String open_provider_package_name) {
      this.open_provider_package_name = open_provider_package_name;
      return this;
    }

    @Override
    public OpenTypePackage build() {
      return new OpenTypePackage(this);
    }
  }

  public enum OpenType
      implements ProtoEnum {
    WDJ(0),
    /**
     * wdj 自己（播放器、下载任务管理器）处理资源
     */
    SYSTEM(1),
    /**
     * 开系统的 action picker
     */
    IAS_APP(2),
    /**
     * 合作方 app 打开
     */
    IAS_HTML5(3);

    private final int value;

    private OpenType(int value) {
      this.value = value;
    }

    @Override
    public int getValue() {
      return value;
    }
  }

  public enum Mode
      implements ProtoEnum {
    ONLINE(0),
    LOCAL(1);

    private final int value;

    private Mode(int value) {
      this.value = value;
    }

    @Override
    public int getValue() {
      return value;
    }
  }
}
