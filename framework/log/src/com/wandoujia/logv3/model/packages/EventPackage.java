// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./log_event_package.proto
package com.wandoujia.logv3.model.packages;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

/**
 * 每次上报时候都需要带上其中一条的信息
 */
public final class EventPackage extends Message {

  @ProtoField(tag = 1)
  public final ClickEvent click_event;

  @ProtoField(tag = 2)
  public final ShowEvent show_event;

  @ProtoField(tag = 3)
  public final ApplicationActiveEvent active_event;

  @ProtoField(tag = 4)
  public final ApplicationStartEvent start_event;

  @ProtoField(tag = 5)
  public final ApplicationCrashEvent crash_event;

  @ProtoField(tag = 6)
  public final TaskEvent task_event;

  @ProtoField(tag = 7)
  public final ConsumptionEvent consumption_event;

  private EventPackage(Builder builder) {
    super(builder);
    this.click_event = builder.click_event;
    this.show_event = builder.show_event;
    this.active_event = builder.active_event;
    this.start_event = builder.start_event;
    this.crash_event = builder.crash_event;
    this.task_event = builder.task_event;
    this.consumption_event = builder.consumption_event;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof EventPackage)) return false;
    EventPackage o = (EventPackage) other;
    return equals(click_event, o.click_event)
        && equals(show_event, o.show_event)
        && equals(active_event, o.active_event)
        && equals(start_event, o.start_event)
        && equals(crash_event, o.crash_event)
        && equals(task_event, o.task_event)
        && equals(consumption_event, o.consumption_event);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = click_event != null ? click_event.hashCode() : 0;
      result = result * 37 + (show_event != null ? show_event.hashCode() : 0);
      result = result * 37 + (active_event != null ? active_event.hashCode() : 0);
      result = result * 37 + (start_event != null ? start_event.hashCode() : 0);
      result = result * 37 + (crash_event != null ? crash_event.hashCode() : 0);
      result = result * 37 + (task_event != null ? task_event.hashCode() : 0);
      result = result * 37 + (consumption_event != null ? consumption_event.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<EventPackage> {

    public ClickEvent click_event;
    public ShowEvent show_event;
    public ApplicationActiveEvent active_event;
    public ApplicationStartEvent start_event;
    public ApplicationCrashEvent crash_event;
    public TaskEvent task_event;
    public ConsumptionEvent consumption_event;

    public Builder() {
    }

    public Builder(EventPackage message) {
      super(message);
      if (message == null) return;
      this.click_event = message.click_event;
      this.show_event = message.show_event;
      this.active_event = message.active_event;
      this.start_event = message.start_event;
      this.crash_event = message.crash_event;
      this.task_event = message.task_event;
      this.consumption_event = message.consumption_event;
    }

    public Builder click_event(ClickEvent click_event) {
      this.click_event = click_event;
      return this;
    }

    public Builder show_event(ShowEvent show_event) {
      this.show_event = show_event;
      return this;
    }

    public Builder active_event(ApplicationActiveEvent active_event) {
      this.active_event = active_event;
      return this;
    }

    public Builder start_event(ApplicationStartEvent start_event) {
      this.start_event = start_event;
      return this;
    }

    public Builder crash_event(ApplicationCrashEvent crash_event) {
      this.crash_event = crash_event;
      return this;
    }

    public Builder task_event(TaskEvent task_event) {
      this.task_event = task_event;
      return this;
    }

    public Builder consumption_event(ConsumptionEvent consumption_event) {
      this.consumption_event = consumption_event;
      return this;
    }

    @Override
    public EventPackage build() {
      return new EventPackage(this);
    }
  }
}
