// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./log_event_package.proto
package com.wandoujia.logv3.model.packages;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

/**
 * 点击
 */
public final class ClickEvent extends Message {

  /**
   * 打在View身上的Log
   */
  @ProtoField(tag = 1)
  public final ViewLogPackage click;

  /**
   * 上一次点击
   */
  @ProtoField(tag = 2)
  public final ViewLogPackage refer_click;

  /**
   * 上一个页面的最后一次点击
   */
  @ProtoField(tag = 3)
  public final ViewLogPackage from_click;

  private ClickEvent(Builder builder) {
    super(builder);
    this.click = builder.click;
    this.refer_click = builder.refer_click;
    this.from_click = builder.from_click;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ClickEvent)) return false;
    ClickEvent o = (ClickEvent) other;
    return equals(click, o.click)
        && equals(refer_click, o.refer_click)
        && equals(from_click, o.from_click);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = click != null ? click.hashCode() : 0;
      result = result * 37 + (refer_click != null ? refer_click.hashCode() : 0);
      result = result * 37 + (from_click != null ? from_click.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<ClickEvent> {

    public ViewLogPackage click;
    public ViewLogPackage refer_click;
    public ViewLogPackage from_click;

    public Builder() {
    }

    public Builder(ClickEvent message) {
      super(message);
      if (message == null) return;
      this.click = message.click;
      this.refer_click = message.refer_click;
      this.from_click = message.from_click;
    }

    /**
     * 打在View身上的Log
     */
    public Builder click(ViewLogPackage click) {
      this.click = click;
      return this;
    }

    /**
     * 上一次点击
     */
    public Builder refer_click(ViewLogPackage refer_click) {
      this.refer_click = refer_click;
      return this;
    }

    /**
     * 上一个页面的最后一次点击
     */
    public Builder from_click(ViewLogPackage from_click) {
      this.from_click = from_click;
      return this;
    }

    @Override
    public ClickEvent build() {
      return new ClickEvent(this);
    }
  }
}
