// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./log_common_package.proto
package com.wandoujia.logv3.model.packages;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoEnum;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.STRING;

/**
 * 网络状态信息
 */
public final class NetworkPackage extends Message {

  public static final Type DEFAULT_TYPE = Type.UNKNOWN_TYPE;
  public static final Subtype DEFAULT_SUB_TYPE = Subtype.UNKNOWN;
  public static final String DEFAULT_ISP = "";
  public static final String DEFAULT_REMOTE_IP = "";

  /**
   * 当前网络类型
   */
  @ProtoField(tag = 1, type = ENUM)
  public final Type type;

  /**
   * 当前移动网络类型，如果网络类型为wifi，则为unknown
   */
  @ProtoField(tag = 2, type = ENUM)
  public final Subtype sub_type;

  /**
   * 运营商(移动、联通等)
   */
  @ProtoField(tag = 3, type = STRING)
  public final String isp;

  /**
   * 用户的外网 IP (服务端用)，格式xxx.xxx.xxx.xxx，不够3位数不补0
   */
  @ProtoField(tag = 4, type = STRING)
  public final String remote_ip;

  private NetworkPackage(Builder builder) {
    super(builder);
    this.type = builder.type;
    this.sub_type = builder.sub_type;
    this.isp = builder.isp;
    this.remote_ip = builder.remote_ip;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof NetworkPackage)) return false;
    NetworkPackage o = (NetworkPackage) other;
    return equals(type, o.type)
        && equals(sub_type, o.sub_type)
        && equals(isp, o.isp)
        && equals(remote_ip, o.remote_ip);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = type != null ? type.hashCode() : 0;
      result = result * 37 + (sub_type != null ? sub_type.hashCode() : 0);
      result = result * 37 + (isp != null ? isp.hashCode() : 0);
      result = result * 37 + (remote_ip != null ? remote_ip.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<NetworkPackage> {

    public Type type;
    public Subtype sub_type;
    public String isp;
    public String remote_ip;

    public Builder() {
    }

    public Builder(NetworkPackage message) {
      super(message);
      if (message == null) return;
      this.type = message.type;
      this.sub_type = message.sub_type;
      this.isp = message.isp;
      this.remote_ip = message.remote_ip;
    }

    /**
     * 当前网络类型
     */
    public Builder type(Type type) {
      this.type = type;
      return this;
    }

    /**
     * 当前移动网络类型，如果网络类型为wifi，则为unknown
     */
    public Builder sub_type(Subtype sub_type) {
      this.sub_type = sub_type;
      return this;
    }

    /**
     * 运营商(移动、联通等)
     */
    public Builder isp(String isp) {
      this.isp = isp;
      return this;
    }

    /**
     * 用户的外网 IP (服务端用)，格式xxx.xxx.xxx.xxx，不够3位数不补0
     */
    public Builder remote_ip(String remote_ip) {
      this.remote_ip = remote_ip;
      return this;
    }

    @Override
    public NetworkPackage build() {
      return new NetworkPackage(this);
    }
  }

  public enum Type
      implements ProtoEnum {
    UNKNOWN_TYPE(0),
    /**
     * 网络情况未知
     */
    WIFI(1),
    /**
     * 无线网络
     */
    MOBILE(2);

    private final int value;

    private Type(int value) {
      this.value = value;
    }

    @Override
    public int getValue() {
      return value;
    }
  }

  public enum Subtype
      implements ProtoEnum {
    UNKNOWN(0),
    /**
     * 网络情况未知
     */
    GPRS(1),
    /**
     * GPRS
     */
    EDGE(2),
    /**
     * EDGE
     */
    UMTS(3),
    /**
     * UMTS
     */
    CDMA(4),
    /**
     * CDMA: Either IS95A or IS95B
     */
    EVDO_0(5),
    /**
     * EVDO revision 0
     */
    EVDO_A(6),
    /**
     * EVDO revision A
     */
    CDMA_1xRTT(7),
    /**
     * 1xRTT
     */
    HSDPA(8),
    /**
     * HSDPA
     */
    HSUPA(9),
    /**
     * HSUPA
     */
    HSPA(10),
    /**
     * HSPA
     */
    IDEN(11),
    /**
     * iDen
     */
    EVDO_B(12),
    /**
     * EVDO revision B
     */
    LTE(13),
    /**
     * LTE
     */
    EHRPD(14),
    /**
     * eHRPD
     */
    HSPAP(15);

    private final int value;

    private Subtype(int value) {
      this.value = value;
    }

    @Override
    public int getValue() {
      return value;
    }
  }
}
