// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./log_extra_package.proto
package com.wandoujia.logv3.model.packages;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;

/**
 * 卡片信息
 */
public final class CardPackage extends Message {

  public static final String DEFAULT_IDENTITY = "";
  public static final String DEFAULT_PARENT_ID = "";
  public static final String DEFAULT_TYPE = "";
  public static final String DEFAULT_SUB_TYPE = "";
  public static final String DEFAULT_TAG = "";
  public static final String DEFAULT_STATUS = "";
  public static final String DEFAULT_SUB_STATUS = "";
  public static final Integer DEFAULT_NUM = 0;

  /**
   * 卡片的id
   */
  @ProtoField(tag = 1, type = STRING)
  public final String identity;

  /**
   * 描述的是卡片在卡片上的情况，主卡片的id
   */
  @ProtoField(tag = 2, type = STRING)
  public final String parent_id;

  /**
   * card的类型 (bannercard丨内容card丨分类card)
   */
  @ProtoField(tag = 3, type = STRING)
  public final String type;

  /**
   * card的子类型
   */
  @ProtoField(tag = 4, type = STRING)
  public final String sub_type;

  /**
   * card的 tag
   */
  @ProtoField(tag = 5, type = STRING)
  public final String tag;

  /**
   * 主状态标签，如，首发，礼包，新品，设计奖;只会有一个标签
   */
  @ProtoField(tag = 6, type = STRING)
  public final String status;

  /**
   * 用次状态标签，如，优秀应用开发者，推广，支持豌豆币；多个标签用英文逗号隔开；视频、电子书次状态标签，如，追追看
   */
  @ProtoField(tag = 7, type = STRING)
  public final String sub_status;

  /**
   * 卡片上展示内容的 content id list.如果是一个内容，则为 0 或者是为 空；如果是多个内容，用来记录卡片的个数
   */
  @ProtoField(tag = 8, type = INT32)
  public final Integer num;

  private CardPackage(Builder builder) {
    super(builder);
    this.identity = builder.identity;
    this.parent_id = builder.parent_id;
    this.type = builder.type;
    this.sub_type = builder.sub_type;
    this.tag = builder.tag;
    this.status = builder.status;
    this.sub_status = builder.sub_status;
    this.num = builder.num;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof CardPackage)) return false;
    CardPackage o = (CardPackage) other;
    return equals(identity, o.identity)
        && equals(parent_id, o.parent_id)
        && equals(type, o.type)
        && equals(sub_type, o.sub_type)
        && equals(tag, o.tag)
        && equals(status, o.status)
        && equals(sub_status, o.sub_status)
        && equals(num, o.num);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = identity != null ? identity.hashCode() : 0;
      result = result * 37 + (parent_id != null ? parent_id.hashCode() : 0);
      result = result * 37 + (type != null ? type.hashCode() : 0);
      result = result * 37 + (sub_type != null ? sub_type.hashCode() : 0);
      result = result * 37 + (tag != null ? tag.hashCode() : 0);
      result = result * 37 + (status != null ? status.hashCode() : 0);
      result = result * 37 + (sub_status != null ? sub_status.hashCode() : 0);
      result = result * 37 + (num != null ? num.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<CardPackage> {

    public String identity;
    public String parent_id;
    public String type;
    public String sub_type;
    public String tag;
    public String status;
    public String sub_status;
    public Integer num;

    public Builder() {
    }

    public Builder(CardPackage message) {
      super(message);
      if (message == null) return;
      this.identity = message.identity;
      this.parent_id = message.parent_id;
      this.type = message.type;
      this.sub_type = message.sub_type;
      this.tag = message.tag;
      this.status = message.status;
      this.sub_status = message.sub_status;
      this.num = message.num;
    }

    /**
     * 卡片的id
     */
    public Builder identity(String identity) {
      this.identity = identity;
      return this;
    }

    /**
     * 描述的是卡片在卡片上的情况，主卡片的id
     */
    public Builder parent_id(String parent_id) {
      this.parent_id = parent_id;
      return this;
    }

    /**
     * card的类型 (bannercard丨内容card丨分类card)
     */
    public Builder type(String type) {
      this.type = type;
      return this;
    }

    /**
     * card的子类型
     */
    public Builder sub_type(String sub_type) {
      this.sub_type = sub_type;
      return this;
    }

    /**
     * card的 tag
     */
    public Builder tag(String tag) {
      this.tag = tag;
      return this;
    }

    /**
     * 主状态标签，如，首发，礼包，新品，设计奖;只会有一个标签
     */
    public Builder status(String status) {
      this.status = status;
      return this;
    }

    /**
     * 用次状态标签，如，优秀应用开发者，推广，支持豌豆币；多个标签用英文逗号隔开；视频、电子书次状态标签，如，追追看
     */
    public Builder sub_status(String sub_status) {
      this.sub_status = sub_status;
      return this;
    }

    /**
     * 卡片上展示内容的 content id list.如果是一个内容，则为 0 或者是为 空；如果是多个内容，用来记录卡片的个数
     */
    public Builder num(Integer num) {
      this.num = num;
      return this;
    }

    @Override
    public CardPackage build() {
      return new CardPackage(this);
    }
  }
}
