// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./log_transition.proto
package com.wandoujia.logv3.model.packages;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;
import static com.squareup.wire.Message.Label.REQUIRED;

/**
 * 搜索查询基础信息，owner by lidahai
 */
public final class QueryMetaInfoPackage extends Message {

  public static final String DEFAULT_QUERY = "";
  public static final String DEFAULT_SESSION_ID = "";
  public static final Integer DEFAULT_API_VERSION = 0;
  public static final Integer DEFAULT_EXP_ID = 0;
  public static final Integer DEFAULT_START_INDEX = 0;
  public static final Integer DEFAULT_LIMIT_SIZE = 0;
  public static final String DEFAULT_MODE = "";
  public static final List<String> DEFAULT_CORRECTED_QUERY = Collections.emptyList();
  public static final Boolean DEFAULT_IS_SENSITIVE = false;

  /**
   * 搜索词
   */
  @ProtoField(tag = 1, type = STRING, label = REQUIRED)
  public final String query;

  /**
   * search 自有的 session 判断
   */
  @ProtoField(tag = 2, type = STRING)
  public final String session_id;

  /**
   * search api 版本号
   */
  @ProtoField(tag = 3, type = INT32)
  public final Integer api_version;

  /**
   * 小流量实验 id
   */
  @ProtoField(tag = 4, type = INT32)
  public final Integer exp_id;

  /**
   * 分页第一个排序数
   */
  @ProtoField(tag = 5, type = INT32)
  public final Integer start_index;

  /**
   * limit
   */
  @ProtoField(tag = 6, type = INT32)
  public final Integer limit_size;

  /**
   * query mode
   */
  @ProtoField(tag = 7, type = STRING)
  public final String mode;

  /**
   * query from
   */
  @ProtoField(tag = 8)
  public final ViewLogPackage from_package;

  /**
   * refer
   */
  @ProtoField(tag = 9)
  public final ViewLogPackage refer_package;

  /**
   * query 纠错
   */
  @ProtoField(tag = 10, type = STRING, label = REPEATED)
  public final List<String> corrected_query;

  /**
   * 是否敏感词/黄反 query
   */
  @ProtoField(tag = 11, type = BOOL)
  public final Boolean is_sensitive;

  private QueryMetaInfoPackage(Builder builder) {
    super(builder);
    this.query = builder.query;
    this.session_id = builder.session_id;
    this.api_version = builder.api_version;
    this.exp_id = builder.exp_id;
    this.start_index = builder.start_index;
    this.limit_size = builder.limit_size;
    this.mode = builder.mode;
    this.from_package = builder.from_package;
    this.refer_package = builder.refer_package;
    this.corrected_query = immutableCopyOf(builder.corrected_query);
    this.is_sensitive = builder.is_sensitive;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof QueryMetaInfoPackage)) return false;
    QueryMetaInfoPackage o = (QueryMetaInfoPackage) other;
    return equals(query, o.query)
        && equals(session_id, o.session_id)
        && equals(api_version, o.api_version)
        && equals(exp_id, o.exp_id)
        && equals(start_index, o.start_index)
        && equals(limit_size, o.limit_size)
        && equals(mode, o.mode)
        && equals(from_package, o.from_package)
        && equals(refer_package, o.refer_package)
        && equals(corrected_query, o.corrected_query)
        && equals(is_sensitive, o.is_sensitive);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = query != null ? query.hashCode() : 0;
      result = result * 37 + (session_id != null ? session_id.hashCode() : 0);
      result = result * 37 + (api_version != null ? api_version.hashCode() : 0);
      result = result * 37 + (exp_id != null ? exp_id.hashCode() : 0);
      result = result * 37 + (start_index != null ? start_index.hashCode() : 0);
      result = result * 37 + (limit_size != null ? limit_size.hashCode() : 0);
      result = result * 37 + (mode != null ? mode.hashCode() : 0);
      result = result * 37 + (from_package != null ? from_package.hashCode() : 0);
      result = result * 37 + (refer_package != null ? refer_package.hashCode() : 0);
      result = result * 37 + (corrected_query != null ? corrected_query.hashCode() : 1);
      result = result * 37 + (is_sensitive != null ? is_sensitive.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<QueryMetaInfoPackage> {

    public String query;
    public String session_id;
    public Integer api_version;
    public Integer exp_id;
    public Integer start_index;
    public Integer limit_size;
    public String mode;
    public ViewLogPackage from_package;
    public ViewLogPackage refer_package;
    public List<String> corrected_query;
    public Boolean is_sensitive;

    public Builder() {
    }

    public Builder(QueryMetaInfoPackage message) {
      super(message);
      if (message == null) return;
      this.query = message.query;
      this.session_id = message.session_id;
      this.api_version = message.api_version;
      this.exp_id = message.exp_id;
      this.start_index = message.start_index;
      this.limit_size = message.limit_size;
      this.mode = message.mode;
      this.from_package = message.from_package;
      this.refer_package = message.refer_package;
      this.corrected_query = copyOf(message.corrected_query);
      this.is_sensitive = message.is_sensitive;
    }

    /**
     * 搜索词
     */
    public Builder query(String query) {
      this.query = query;
      return this;
    }

    /**
     * search 自有的 session 判断
     */
    public Builder session_id(String session_id) {
      this.session_id = session_id;
      return this;
    }

    /**
     * search api 版本号
     */
    public Builder api_version(Integer api_version) {
      this.api_version = api_version;
      return this;
    }

    /**
     * 小流量实验 id
     */
    public Builder exp_id(Integer exp_id) {
      this.exp_id = exp_id;
      return this;
    }

    /**
     * 分页第一个排序数
     */
    public Builder start_index(Integer start_index) {
      this.start_index = start_index;
      return this;
    }

    /**
     * limit
     */
    public Builder limit_size(Integer limit_size) {
      this.limit_size = limit_size;
      return this;
    }

    /**
     * query mode
     */
    public Builder mode(String mode) {
      this.mode = mode;
      return this;
    }

    /**
     * query from
     */
    public Builder from_package(ViewLogPackage from_package) {
      this.from_package = from_package;
      return this;
    }

    /**
     * refer
     */
    public Builder refer_package(ViewLogPackage refer_package) {
      this.refer_package = refer_package;
      return this;
    }

    /**
     * query 纠错
     */
    public Builder corrected_query(List<String> corrected_query) {
      this.corrected_query = checkForNulls(corrected_query);
      return this;
    }

    /**
     * 是否敏感词/黄反 query
     */
    public Builder is_sensitive(Boolean is_sensitive) {
      this.is_sensitive = is_sensitive;
      return this;
    }

    @Override
    public QueryMetaInfoPackage build() {
      checkRequiredFields();
      return new QueryMetaInfoPackage(this);
    }
  }
}
