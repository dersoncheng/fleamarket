// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./log_extra_package.proto
package com.wandoujia.logv3.model.packages;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoEnum;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.STRING;

/**
 * 内容信息包
 */
public final class ContentPackage extends Message {

  public static final String DEFAULT_IDENTITY = "";
  public static final String DEFAULT_TITLE = "";
  public static final Type DEFAULT_TYPE = Type.APP;
  public static final String DEFAULT_SUB_TYPE = "";
  public static final Boolean DEFAULT_IS_FREE = false;

  /**
   * 内容的唯一识别
   */
  @ProtoField(tag = 1, type = STRING)
  public final String identity;

  /**
   * 内容的标题，很多时候就是内容的名字
   */
  @ProtoField(tag = 2, type = STRING)
  public final String title;

  /**
   * 内容的类型，app,game,video,wallpaper,ebook
   */
  @ProtoField(tag = 3, type = ENUM)
  public final Type type;

  /**
   * 内容的子类型，如类型是 video ,子类型是 movie 等等
   */
  @ProtoField(tag = 4, type = STRING)
  public final String sub_type;

  /**
   * 是否是付费的
   */
  @ProtoField(tag = 5, type = BOOL)
  public final Boolean is_free;

  private ContentPackage(Builder builder) {
    super(builder);
    this.identity = builder.identity;
    this.title = builder.title;
    this.type = builder.type;
    this.sub_type = builder.sub_type;
    this.is_free = builder.is_free;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ContentPackage)) return false;
    ContentPackage o = (ContentPackage) other;
    return equals(identity, o.identity)
        && equals(title, o.title)
        && equals(type, o.type)
        && equals(sub_type, o.sub_type)
        && equals(is_free, o.is_free);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = identity != null ? identity.hashCode() : 0;
      result = result * 37 + (title != null ? title.hashCode() : 0);
      result = result * 37 + (type != null ? type.hashCode() : 0);
      result = result * 37 + (sub_type != null ? sub_type.hashCode() : 0);
      result = result * 37 + (is_free != null ? is_free.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<ContentPackage> {

    public String identity;
    public String title;
    public Type type;
    public String sub_type;
    public Boolean is_free;

    public Builder() {
    }

    public Builder(ContentPackage message) {
      super(message);
      if (message == null) return;
      this.identity = message.identity;
      this.title = message.title;
      this.type = message.type;
      this.sub_type = message.sub_type;
      this.is_free = message.is_free;
    }

    /**
     * 内容的唯一识别
     */
    public Builder identity(String identity) {
      this.identity = identity;
      return this;
    }

    /**
     * 内容的标题，很多时候就是内容的名字
     */
    public Builder title(String title) {
      this.title = title;
      return this;
    }

    /**
     * 内容的类型，app,game,video,wallpaper,ebook
     */
    public Builder type(Type type) {
      this.type = type;
      return this;
    }

    /**
     * 内容的子类型，如类型是 video ,子类型是 movie 等等
     */
    public Builder sub_type(String sub_type) {
      this.sub_type = sub_type;
      return this;
    }

    /**
     * 是否是付费的
     */
    public Builder is_free(Boolean is_free) {
      this.is_free = is_free;
      return this;
    }

    @Override
    public ContentPackage build() {
      return new ContentPackage(this);
    }
  }

  public enum Type
      implements ProtoEnum {
    APP(0),
    /**
     * 应用
     */
    VIDEO(1),
    /**
     * 视频
     */
    EBOOK(2),
    /**
     * 电子书
     */
    GAME(3),
    /**
     * 游戏
     */
    WALLPAPER(4),
    /**
     * 壁纸
     */
    PERSON(5),
    /**
     * 人物
     */
    MUSIC_SONG(6),
    /**
     * 歌曲
     */
    MUSIC_ALBUM(7),
    /**
     * 音乐专辑
     */
    MUSIC_PLAY_LIST(8),
    /**
     * 音乐播放列表
     */
    MUSIC_RANKING_LIST(9),
    /**
     * 音乐榜单
     */
    MUSIC_RANK_ISSUE(10),
    /**
     * 音乐某期榜单
     */
    SINGER(11),
    /**
     * 歌手
     */
    IAS(12);

    private final int value;

    private Type(int value) {
      this.value = value;
    }

    @Override
    public int getValue() {
      return value;
    }
  }
}
