// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./log_model.proto
package com.wandoujia.log.toolkit.model;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.STRING;

public final class LaunchSourcePackage extends Message {

  public static final String DEFAULT_LAUNCH_SOURCE = "UNKNOWN";
  public static final String DEFAULT_LAUNCH_KEYWORD = "";

  @ProtoField(tag = 1, type = STRING)
  public final String launch_source;

  @ProtoField(tag = 2, type = STRING)
  public final String launch_keyword;

  private LaunchSourcePackage(Builder builder) {
    super(builder);
    this.launch_source = builder.launch_source;
    this.launch_keyword = builder.launch_keyword;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof LaunchSourcePackage)) return false;
    LaunchSourcePackage o = (LaunchSourcePackage) other;
    return equals(launch_source, o.launch_source)
        && equals(launch_keyword, o.launch_keyword);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = launch_source != null ? launch_source.hashCode() : 0;
      result = result * 37 + (launch_keyword != null ? launch_keyword.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<LaunchSourcePackage> {

    public String launch_source;
    public String launch_keyword;

    public Builder() {
    }

    public Builder(LaunchSourcePackage message) {
      super(message);
      if (message == null) return;
      this.launch_source = message.launch_source;
      this.launch_keyword = message.launch_keyword;
    }

    public Builder launch_source(String launch_source) {
      this.launch_source = launch_source;
      return this;
    }

    public Builder launch_keyword(String launch_keyword) {
      this.launch_keyword = launch_keyword;
      return this;
    }

    @Override
    public LaunchSourcePackage build() {
      return new LaunchSourcePackage(this);
    }
  }
}
