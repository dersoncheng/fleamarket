// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./image.proto
package com.wandoujia.media.pmp.models;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoEnum;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.DOUBLE;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.SINT64;
import static com.squareup.wire.Message.Datatype.STRING;

public final class MediaImage extends Message {

  public static final Long DEFAULT_ID = 0L;
  public static final String DEFAULT_PATH = "";
  public static final String DEFAULT_DISPLAY_NAME = "";
  public static final String DEFAULT_MIME_TYPE = "";
  public static final String DEFAULT_TITLE = "";
  public static final Long DEFAULT_SIZE = 0L;
  public static final Long DEFAULT_DATE_ADDED = 0L;
  public static final Long DEFAULT_DATE_MODIFIED = 0L;
  public static final String DEFAULT_DESCRIPTION = "";
  public static final String DEFAULT_PICASA = "";
  public static final String DEFAULT_BUCKET_NAME = "";
  public static final Long DEFAULT_DATE_TAKEN = 0L;
  public static final Double DEFAULT_LATITUDE = 0D;
  public static final Double DEFAULT_LONGITUDE = 0D;
  public static final Integer DEFAULT_IS_PRIVATE = 0;
  public static final Integer DEFAULT_ORIENTATION = 0;
  public static final String DEFAULT_FOLDER_ALIAS = "";
  public static final Integer DEFAULT_WIDTH = 0;
  public static final Integer DEFAULT_HEIGHT = 0;

  @ProtoField(tag = 1, type = SINT64)
  public final Long id;

  @ProtoField(tag = 2, type = STRING)
  public final String path;

  @ProtoField(tag = 3, type = STRING)
  public final String display_name;

  @ProtoField(tag = 4, type = STRING)
  public final String mime_type;

  @ProtoField(tag = 5, type = STRING)
  public final String title;

  @ProtoField(tag = 6, type = SINT64)
  public final Long size;

  @ProtoField(tag = 7, type = SINT64)
  public final Long date_added;

  @ProtoField(tag = 8, type = SINT64)
  public final Long date_modified;

  @ProtoField(tag = 9, type = STRING)
  public final String description;

  @ProtoField(tag = 10, type = STRING)
  public final String picasa;

  @ProtoField(tag = 11, type = STRING)
  public final String bucket_name;

  @ProtoField(tag = 12, type = SINT64)
  public final Long date_taken;

  @ProtoField(tag = 13, type = DOUBLE)
  public final Double latitude;

  @ProtoField(tag = 14, type = DOUBLE)
  public final Double longitude;

  @ProtoField(tag = 15, type = INT32)
  public final Integer is_private;

  @ProtoField(tag = 16, type = INT32)
  public final Integer orientation;

  @ProtoField(tag = 17, type = STRING)
  public final String folder_alias;

  @ProtoField(tag = 18, type = INT32)
  public final Integer width;

  @ProtoField(tag = 19, type = INT32)
  public final Integer height;

  private MediaImage(Builder builder) {
    super(builder);
    this.id = builder.id;
    this.path = builder.path;
    this.display_name = builder.display_name;
    this.mime_type = builder.mime_type;
    this.title = builder.title;
    this.size = builder.size;
    this.date_added = builder.date_added;
    this.date_modified = builder.date_modified;
    this.description = builder.description;
    this.picasa = builder.picasa;
    this.bucket_name = builder.bucket_name;
    this.date_taken = builder.date_taken;
    this.latitude = builder.latitude;
    this.longitude = builder.longitude;
    this.is_private = builder.is_private;
    this.orientation = builder.orientation;
    this.folder_alias = builder.folder_alias;
    this.width = builder.width;
    this.height = builder.height;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof MediaImage)) return false;
    MediaImage o = (MediaImage) other;
    return equals(id, o.id)
        && equals(path, o.path)
        && equals(display_name, o.display_name)
        && equals(mime_type, o.mime_type)
        && equals(title, o.title)
        && equals(size, o.size)
        && equals(date_added, o.date_added)
        && equals(date_modified, o.date_modified)
        && equals(description, o.description)
        && equals(picasa, o.picasa)
        && equals(bucket_name, o.bucket_name)
        && equals(date_taken, o.date_taken)
        && equals(latitude, o.latitude)
        && equals(longitude, o.longitude)
        && equals(is_private, o.is_private)
        && equals(orientation, o.orientation)
        && equals(folder_alias, o.folder_alias)
        && equals(width, o.width)
        && equals(height, o.height);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = id != null ? id.hashCode() : 0;
      result = result * 37 + (path != null ? path.hashCode() : 0);
      result = result * 37 + (display_name != null ? display_name.hashCode() : 0);
      result = result * 37 + (mime_type != null ? mime_type.hashCode() : 0);
      result = result * 37 + (title != null ? title.hashCode() : 0);
      result = result * 37 + (size != null ? size.hashCode() : 0);
      result = result * 37 + (date_added != null ? date_added.hashCode() : 0);
      result = result * 37 + (date_modified != null ? date_modified.hashCode() : 0);
      result = result * 37 + (description != null ? description.hashCode() : 0);
      result = result * 37 + (picasa != null ? picasa.hashCode() : 0);
      result = result * 37 + (bucket_name != null ? bucket_name.hashCode() : 0);
      result = result * 37 + (date_taken != null ? date_taken.hashCode() : 0);
      result = result * 37 + (latitude != null ? latitude.hashCode() : 0);
      result = result * 37 + (longitude != null ? longitude.hashCode() : 0);
      result = result * 37 + (is_private != null ? is_private.hashCode() : 0);
      result = result * 37 + (orientation != null ? orientation.hashCode() : 0);
      result = result * 37 + (folder_alias != null ? folder_alias.hashCode() : 0);
      result = result * 37 + (width != null ? width.hashCode() : 0);
      result = result * 37 + (height != null ? height.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<MediaImage> {

    public Long id;
    public String path;
    public String display_name;
    public String mime_type;
    public String title;
    public Long size;
    public Long date_added;
    public Long date_modified;
    public String description;
    public String picasa;
    public String bucket_name;
    public Long date_taken;
    public Double latitude;
    public Double longitude;
    public Integer is_private;
    public Integer orientation;
    public String folder_alias;
    public Integer width;
    public Integer height;

    public Builder() {
    }

    public Builder(MediaImage message) {
      super(message);
      if (message == null) return;
      this.id = message.id;
      this.path = message.path;
      this.display_name = message.display_name;
      this.mime_type = message.mime_type;
      this.title = message.title;
      this.size = message.size;
      this.date_added = message.date_added;
      this.date_modified = message.date_modified;
      this.description = message.description;
      this.picasa = message.picasa;
      this.bucket_name = message.bucket_name;
      this.date_taken = message.date_taken;
      this.latitude = message.latitude;
      this.longitude = message.longitude;
      this.is_private = message.is_private;
      this.orientation = message.orientation;
      this.folder_alias = message.folder_alias;
      this.width = message.width;
      this.height = message.height;
    }

    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    public Builder path(String path) {
      this.path = path;
      return this;
    }

    public Builder display_name(String display_name) {
      this.display_name = display_name;
      return this;
    }

    public Builder mime_type(String mime_type) {
      this.mime_type = mime_type;
      return this;
    }

    public Builder title(String title) {
      this.title = title;
      return this;
    }

    public Builder size(Long size) {
      this.size = size;
      return this;
    }

    public Builder date_added(Long date_added) {
      this.date_added = date_added;
      return this;
    }

    public Builder date_modified(Long date_modified) {
      this.date_modified = date_modified;
      return this;
    }

    public Builder description(String description) {
      this.description = description;
      return this;
    }

    public Builder picasa(String picasa) {
      this.picasa = picasa;
      return this;
    }

    public Builder bucket_name(String bucket_name) {
      this.bucket_name = bucket_name;
      return this;
    }

    public Builder date_taken(Long date_taken) {
      this.date_taken = date_taken;
      return this;
    }

    public Builder latitude(Double latitude) {
      this.latitude = latitude;
      return this;
    }

    public Builder longitude(Double longitude) {
      this.longitude = longitude;
      return this;
    }

    public Builder is_private(Integer is_private) {
      this.is_private = is_private;
      return this;
    }

    public Builder orientation(Integer orientation) {
      this.orientation = orientation;
      return this;
    }

    public Builder folder_alias(String folder_alias) {
      this.folder_alias = folder_alias;
      return this;
    }

    public Builder width(Integer width) {
      this.width = width;
      return this;
    }

    public Builder height(Integer height) {
      this.height = height;
      return this;
    }

    @Override
    public MediaImage build() {
      return new MediaImage(this);
    }
  }

  public enum ScanType
      implements ProtoEnum {
    ID_ONLY(0),
    METADATA(1),
    FULL(2);

    private final int value;

    private ScanType(int value) {
      this.value = value;
    }

    @Override
    public int getValue() {
      return value;
    }
  }
}
