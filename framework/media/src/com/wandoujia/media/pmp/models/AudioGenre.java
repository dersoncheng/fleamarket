// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./audio.proto
package com.wandoujia.media.pmp.models;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.SINT64;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.PACKED;

public final class AudioGenre extends Message {

  public static final Long DEFAULT_ID = 0L;
  public static final String DEFAULT_NAME = "";
  public static final List<Long> DEFAULT_TRACKS = Collections.emptyList();

  @ProtoField(tag = 1, type = SINT64)
  public final Long id;

  @ProtoField(tag = 2, type = STRING)
  public final String name;

  @ProtoField(tag = 3, type = SINT64, label = PACKED)
  public final List<Long> tracks;

  private AudioGenre(Builder builder) {
    super(builder);
    this.id = builder.id;
    this.name = builder.name;
    this.tracks = immutableCopyOf(builder.tracks);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AudioGenre)) return false;
    AudioGenre o = (AudioGenre) other;
    return equals(id, o.id)
        && equals(name, o.name)
        && equals(tracks, o.tracks);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = id != null ? id.hashCode() : 0;
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + (tracks != null ? tracks.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<AudioGenre> {

    public Long id;
    public String name;
    public List<Long> tracks;

    public Builder() {
    }

    public Builder(AudioGenre message) {
      super(message);
      if (message == null) return;
      this.id = message.id;
      this.name = message.name;
      this.tracks = copyOf(message.tracks);
    }

    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    public Builder name(String name) {
      this.name = name;
      return this;
    }

    public Builder tracks(List<Long> tracks) {
      this.tracks = checkForNulls(tracks);
      return this;
    }

    @Override
    public AudioGenre build() {
      return new AudioGenre(this);
    }
  }
}
