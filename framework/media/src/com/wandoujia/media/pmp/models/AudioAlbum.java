// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./audio.proto
package com.wandoujia.media.pmp.models;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.SINT64;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.PACKED;

public final class AudioAlbum extends Message {

  public static final Long DEFAULT_ID = 0L;
  public static final String DEFAULT_ALBUM = "";
  public static final String DEFAULT_ARTIST = "";
  public static final Integer DEFAULT_FIRST_YEAR = 0;
  public static final Integer DEFAULT_LAST_YEAR = 0;
  public static final Integer DEFAULT_NUMBER_OF_SONGS = 0;
  public static final Integer DEFAULT_NUMBER_OF_SONGS_FOR_ARTIST = 0;
  public static final List<Long> DEFAULT_TRACKS = Collections.emptyList();
  public static final Integer DEFAULT_ALBUM_ID = 0;
  public static final String DEFAULT_ALBUM_ART = "";

  @ProtoField(tag = 1, type = SINT64)
  public final Long id;

  @ProtoField(tag = 2, type = STRING)
  public final String album;

  @ProtoField(tag = 3, type = STRING)
  public final String artist;

  @ProtoField(tag = 4, type = INT32)
  public final Integer first_year;

  @ProtoField(tag = 5, type = INT32)
  public final Integer last_year;

  @ProtoField(tag = 6, type = INT32)
  public final Integer number_of_songs;

  @ProtoField(tag = 7, type = INT32)
  public final Integer number_of_songs_for_artist;

  @ProtoField(tag = 8, type = SINT64, label = PACKED)
  public final List<Long> tracks;

  @ProtoField(tag = 9, type = INT32)
  public final Integer album_id;

  @ProtoField(tag = 10, type = STRING)
  public final String album_art;

  private AudioAlbum(Builder builder) {
    super(builder);
    this.id = builder.id;
    this.album = builder.album;
    this.artist = builder.artist;
    this.first_year = builder.first_year;
    this.last_year = builder.last_year;
    this.number_of_songs = builder.number_of_songs;
    this.number_of_songs_for_artist = builder.number_of_songs_for_artist;
    this.tracks = immutableCopyOf(builder.tracks);
    this.album_id = builder.album_id;
    this.album_art = builder.album_art;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AudioAlbum)) return false;
    AudioAlbum o = (AudioAlbum) other;
    return equals(id, o.id)
        && equals(album, o.album)
        && equals(artist, o.artist)
        && equals(first_year, o.first_year)
        && equals(last_year, o.last_year)
        && equals(number_of_songs, o.number_of_songs)
        && equals(number_of_songs_for_artist, o.number_of_songs_for_artist)
        && equals(tracks, o.tracks)
        && equals(album_id, o.album_id)
        && equals(album_art, o.album_art);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = id != null ? id.hashCode() : 0;
      result = result * 37 + (album != null ? album.hashCode() : 0);
      result = result * 37 + (artist != null ? artist.hashCode() : 0);
      result = result * 37 + (first_year != null ? first_year.hashCode() : 0);
      result = result * 37 + (last_year != null ? last_year.hashCode() : 0);
      result = result * 37 + (number_of_songs != null ? number_of_songs.hashCode() : 0);
      result = result * 37 + (number_of_songs_for_artist != null ? number_of_songs_for_artist.hashCode() : 0);
      result = result * 37 + (tracks != null ? tracks.hashCode() : 1);
      result = result * 37 + (album_id != null ? album_id.hashCode() : 0);
      result = result * 37 + (album_art != null ? album_art.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<AudioAlbum> {

    public Long id;
    public String album;
    public String artist;
    public Integer first_year;
    public Integer last_year;
    public Integer number_of_songs;
    public Integer number_of_songs_for_artist;
    public List<Long> tracks;
    public Integer album_id;
    public String album_art;

    public Builder() {
    }

    public Builder(AudioAlbum message) {
      super(message);
      if (message == null) return;
      this.id = message.id;
      this.album = message.album;
      this.artist = message.artist;
      this.first_year = message.first_year;
      this.last_year = message.last_year;
      this.number_of_songs = message.number_of_songs;
      this.number_of_songs_for_artist = message.number_of_songs_for_artist;
      this.tracks = copyOf(message.tracks);
      this.album_id = message.album_id;
      this.album_art = message.album_art;
    }

    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    public Builder album(String album) {
      this.album = album;
      return this;
    }

    public Builder artist(String artist) {
      this.artist = artist;
      return this;
    }

    public Builder first_year(Integer first_year) {
      this.first_year = first_year;
      return this;
    }

    public Builder last_year(Integer last_year) {
      this.last_year = last_year;
      return this;
    }

    public Builder number_of_songs(Integer number_of_songs) {
      this.number_of_songs = number_of_songs;
      return this;
    }

    public Builder number_of_songs_for_artist(Integer number_of_songs_for_artist) {
      this.number_of_songs_for_artist = number_of_songs_for_artist;
      return this;
    }

    public Builder tracks(List<Long> tracks) {
      this.tracks = checkForNulls(tracks);
      return this;
    }

    public Builder album_id(Integer album_id) {
      this.album_id = album_id;
      return this;
    }

    public Builder album_art(String album_art) {
      this.album_art = album_art;
      return this;
    }

    @Override
    public AudioAlbum build() {
      return new AudioAlbum(this);
    }
  }
}
